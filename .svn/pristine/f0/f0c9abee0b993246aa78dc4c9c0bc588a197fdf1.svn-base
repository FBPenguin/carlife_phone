
package com.didi365.carlife.android.phone.logic;

import android.bluetooth.BluetoothAdapter;
import android.text.TextUtils;
import com.baidu.carlife.protobuf.CarlifeDeviceInfoProto;
import com.didi365.carlife.android.phone.connect.AOAConnectManager;
import com.didi365.carlife.android.phone.connect.CarlifeCmdMessage;
import com.didi365.carlife.android.phone.util.CommonParams;
import com.didi365.carlife.android.phone.util.LogUtil;

public class CarlifeDeviceInfoManager {

    public static final String TAG = "CarlifeDeviceInfoManager";

    private static CarlifeDeviceInfoManager mInstance = null;
    private static CarlifeDeviceInfoProto.CarlifeDeviceInfo mDeviceInfo = null;
    private static CarlifeDeviceInfoProto.CarlifeDeviceInfo mPhoneDeviceInfo = null;

    private CarlifeDeviceInfoManager() {

    }

    public static CarlifeDeviceInfoManager getInstance() {
        if (null == mInstance) {
            synchronized (CarlifeDeviceInfoManager.class) {
                if (null == mInstance) {
                    mInstance = new CarlifeDeviceInfoManager();
                }
            }
        }
        return mInstance;
    }

    public void init() {
        try {
            CarlifeDeviceInfoProto.CarlifeDeviceInfo.Builder builder = CarlifeDeviceInfoProto.CarlifeDeviceInfo.newBuilder();
            builder.setOs(CommonParams.TYPE_OF_OS);
            builder.setBoard(android.os.Build.BOARD);
            builder.setBootloader(android.os.Build.BOOTLOADER);
            builder.setBrand(android.os.Build.BRAND);
            builder.setCpuAbi(android.os.Build.CPU_ABI);
            builder.setCpuAbi2(android.os.Build.CPU_ABI2);
            builder.setDevice(android.os.Build.DEVICE);
            builder.setDisplay(android.os.Build.DISPLAY);
            builder.setFingerprint(android.os.Build.FINGERPRINT);
            builder.setHardware(android.os.Build.HARDWARE);
            builder.setHost(android.os.Build.HOST);
            builder.setCid(android.os.Build.ID);
            builder.setManufacturer(android.os.Build.MANUFACTURER);
            builder.setModel(android.os.Build.MODEL);
            builder.setProduct(android.os.Build.PRODUCT);
            builder.setSerial(android.os.Build.SERIAL);

            builder.setCodename(android.os.Build.VERSION.CODENAME);
            builder.setIncremental(android.os.Build.VERSION.INCREMENTAL);
            builder.setRelease(android.os.Build.VERSION.RELEASE);
            builder.setSdk(android.os.Build.VERSION.SDK);
            builder.setSdkInt(android.os.Build.VERSION.SDK_INT);

            BluetoothAdapter mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
            if (mBluetoothAdapter != null) {
                String addrString = mBluetoothAdapter.getAddress();
                if (!TextUtils.isEmpty(addrString)) {
                    builder.setBtaddress(addrString);
                } else {
                    builder.setBtaddress("unknow");
                }

            } else {
                builder.setBtaddress("unknow");
            }
            mDeviceInfo = builder.build();
        } catch (Exception ex) {
            LogUtil.e(TAG, "init error");
            ex.printStackTrace();
        }
    }

    public CarlifeDeviceInfoProto.CarlifeDeviceInfo getDeviceInfo() {
        return mDeviceInfo;
    }

    public void setPhoneDeviceInfo(CarlifeDeviceInfoProto.CarlifeDeviceInfo info) {
        mPhoneDeviceInfo = info;
    }

    public CarlifeDeviceInfoProto.CarlifeDeviceInfo getPhoneDeviceInfo() {
        return mPhoneDeviceInfo;
    }

    public void sendCarlifeDeviceInfo() {
        try {
            CarlifeCmdMessage carlifeMsg = new CarlifeCmdMessage(true);
            carlifeMsg.setServiceType(CommonParams.MSG_CMD_MD_INFO);
            carlifeMsg.setData(mDeviceInfo.toByteArray());
            carlifeMsg.setLength(mDeviceInfo.getSerializedSize());
            AOAConnectManager.getInstance().writeCarlifeCmdMessage(carlifeMsg);

        } catch (Exception ex) {
            LogUtil.e(TAG, "send hu info error");
            ex.printStackTrace();
        }
    }

    public void sendCarlifeWakeUpMICRecord() {
        CarlifeCmdMessage carlifeMsg = new CarlifeCmdMessage(true);
        carlifeMsg.setServiceType(CommonParams.MSG_CMD_MIC_RECORD_WAKEUP_START);
        AOAConnectManager.getInstance().writeCarlifeCmdMessage(carlifeMsg);
    }

    public void sendCarlifeForground() {
        CarlifeCmdMessage carlifeMsg = new CarlifeCmdMessage(true);
        carlifeMsg.setServiceType(CommonParams.MSG_CMD_FOREGROUND);
        AOAConnectManager.getInstance().writeCarlifeCmdMessage(carlifeMsg);
    }

    public void sendCarlifeScreenOn() {
        CarlifeCmdMessage carlifeMsg = new CarlifeCmdMessage(true);
        carlifeMsg.setServiceType(CommonParams.MSG_CMD_SCREEN_ON);
        AOAConnectManager.getInstance().writeCarlifeCmdMessage(carlifeMsg);
    }

    public void sendCarlifeAuthenResponse() {
        CarlifeCmdMessage carlifeMsg = new CarlifeCmdMessage(true);
        carlifeMsg.setServiceType(CommonParams.MSG_CMD_MD_AUTHEN_RESPONSE);
        AOAConnectManager.getInstance().writeCarlifeCmdMessage(carlifeMsg);
    }
}
