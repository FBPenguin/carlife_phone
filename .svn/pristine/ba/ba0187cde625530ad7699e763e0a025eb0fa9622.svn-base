package com.didi365.carlife.android.phone.util;

import com.didi365.carlife.android.phone.connect.AOAAccessorySetup;
import com.didi365.carlife.android.phone.connect.ConnectManager;

/**
 * Created by zheng on 2019/3/29
 */
public class DecodeUtil {

    private final String TAG = DecodeUtil.class.getSimpleName();

    private DecoderThread decoderThread = null;
    private static DecodeUtil mInstance = null;

    private final int LEN_OF_FRAME_HEAD = 4;
    private final int LEN_OF_MSG_HEAD = 8;

    private byte[] head = new byte[LEN_OF_MSG_HEAD];

    //private byte[] SPS_BUFFER = new byte[]{0x00, 0x00, 0x00, 0x01, 0x67, 0x42, 0x00, 0x29, (byte) 0xe5, 0x40, 0x20, 0x02, 0x68, (byte) 0x80, 0x00, 0x00, 0x00, 0x01, 0x68, (byte) 0xce, 0x3c, (byte) 0x80};
    private byte[] SPS_BUFFER;

    private int count = -1;

    private int lenMsgHead = -1;
    private int lenMsgData = -1;

    private boolean isRunning = false;

    private DecodeUtil() {
        System.arraycopy(ByteConvert.intToBytes(CommonParams.MSG_CHANNEL_ID_VIDEO), 0, head, 0, 4);
    }

    public static DecodeUtil getInstance() {
        if (mInstance == null) {
            mInstance = new DecodeUtil();
        }
        return mInstance;
    }

    public void startDecode() {
        isRunning = true;
        if(decoderThread == null) {
            decoderThread = new DecoderThread();
            decoderThread.start();
        }
    }

    public void stopDecode() {
        isRunning = false;
        decoderThread = null;
    }

    private class DecoderThread extends Thread {

        @Override
        public void run() {
            LogUtil.e(TAG, "START REC VIDEO RUN");
            byte[] msgHead = new byte[LEN_OF_FRAME_HEAD];
            while (isRunning) {
                count++;
                ConnectManager.getInstance().readVideoData(msgHead, msgHead.length);
                LogUtil.e(TAG, "msgHead " + ByteConvert.printHexString(msgHead, msgHead.length));
                lenMsgData = ByteConvert.bytesToInt(msgHead);
                LogUtil.e(TAG, "lenMsgData " + lenMsgData);
                byte[] msgData = new byte[lenMsgData];
                ConnectManager.getInstance().readVideoData(msgData, lenMsgData);

                if(count == 0) {
                    SPS_BUFFER = new byte[lenMsgData];
                    System.arraycopy(msgData, 0, SPS_BUFFER, 0, lenMsgData);
                }

                lenMsgHead = CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE;

                if (count == 1) {
                    System.arraycopy(ByteConvert.intToBytes(lenMsgHead + lenMsgData + SPS_BUFFER.length), 0, head, 4, 4);
                } else {
                    System.arraycopy(ByteConvert.intToBytes(lenMsgHead + lenMsgData), 0, head, 4, 4);
                }

                byte[] packageHead = new byte[CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE];
                byte[] packageData;
                if(count == 1) {
                    packageData = new byte[CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE + lenMsgData + SPS_BUFFER.length];
                } else {
                    packageData = new byte[CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE + lenMsgData];
                }

                if(count ==1) {
                    System.arraycopy(ByteConvert.intToBytes(lenMsgData + SPS_BUFFER.length), 0, packageHead, 0, 4);
                    System.arraycopy(ByteConvert.longToBytesLowbyte(System.currentTimeMillis()), 0, packageHead, 4, 4);
                } else {
                    System.arraycopy(msgHead, 0, packageHead, 0, 4);
                    System.arraycopy(ByteConvert.longToBytesLowbyte(System.currentTimeMillis()), 0, packageHead, 4, 4);
                }

                System.arraycopy(packageHead, 0, packageData, 0, CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE);

                if(count == 1) {
                    System.arraycopy(SPS_BUFFER, 0, packageData, CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE, SPS_BUFFER.length);
                    System.arraycopy(msgData, 0, packageData, CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE + SPS_BUFFER.length, lenMsgData);
                } else {
                    System.arraycopy(msgData, 0, packageData, CommonParams.MSG_VIDEO_HEAD_SIZE_BYTE, lenMsgData);
                }

                if (count > 0) {
                    AOAAccessorySetup.getInstance().bulkTransferOut(head, LEN_OF_MSG_HEAD, packageData, packageData.length);
                }
            }
        }
    }
}
